name: Deploy Cloudflare Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  # pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "cf-pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules

      - uses: actions/setup-node@v4
        with:
          node-version: 23

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm i --production

      - run: make index-update

      - name: Checkout quartz-deploy
        uses: actions/checkout@v4
        with:
          repository: adoyle-h/quartz-deploy
          path: ./quartz-deploy

      - name: Build with quartz-deploy
        run: ./quartz-deploy/quartz-deploy build . 6

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: public-${{ github.sha }}
          path: .public
          retention-days: 29 # 4 weeks

  # Deployment job
  deploy-cf-page:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: public-${{ github.sha }}
          path: public

      - name: Deploy to Cloudflare Pages
        id: deployment-cf-page
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          environment: production
          workingDirectory: ./public
